---
name: Publish Nightly PyPI package
on:
  workflow_call:
jobs:
  publish_to_pypi:
    name: Publish Nightly Python 🐍 package 📦 to PyPI
    runs-on: ubuntu-latest
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: utf-8
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          ref: develop
      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.8'
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Set nightly version
        run: |
          # Extract the current version
          CURRENT_VERSION=$(poetry version -s)

          # Get the current date in the format of YYYY-MM-DD
          DATE=$(date +"%Y%m%d")

          # Combine the current version with the date to form
          # the new version string
          NIGHTLY_VERSION="${CURRENT_VERSION}.dev${DATE}"

          # Set the nightly version
          echo "NIGHTLY_VERSION=$NIGHTLY_VERSION" >> $GITHUB_ENV
      - name: Modify pyproject.toml for nightly release
        run: |
          # Change the package name to `zenml-nightly`
          sed -i 's/name = "zenml"/name = "zenml-nightly"/' pyproject.toml

          # Update the version to the nightly version
          poetry version $NIGHTLY_VERSION
      - name: Include latest dashboard
        run: bash scripts/install-dashboard.sh
      - name: Build package
        run: poetry build
      - name: Mint token
        id: mint
        uses: tschm/token-mint-action@v1.0.2
      - name: Publish the package with poetry
        run: |-
          if [ "$(cat src/zenml/VERSION)" = "$(echo ${GITHUB_REF} | sed 's|refs/tags/||g')" ];
          then poetry publish -u __token__ -p '${{ steps.mint.outputs.api-token }}';
          else echo "Version mismatch between src/zenml/VERSION and branch tag" && exit 1;
          fi
